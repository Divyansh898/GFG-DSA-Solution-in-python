import sys
class Solution:
	def minSteps(self, N):
		# code here
		dp = [-1 for _ in range(N+1)]
	    return self.dp(N,dp)
	    
	    
	def dp(self,N,dp):
        if N == 1:
            return 0
        ans1 = sys.maxsize
        if N % 3 == 0:
            if dp[N//3] == -1:
                ans1 = self.dp(N//3,dp)
                dp[N//3] = ans1
            else:
                ans1 = dp[N//3]
        ans2 = sys.maxsize        
        if N % 2 == 0:
            if dp[N//2] == -1:
                ans2 = self.dp(N//2,dp)
                dp[N//2] = ans2
            else:
                ans2 = dp[N//2]
	    
	    if dp[N-1] == -1:
	        ans3 = self.dp(N-1,dp)
	        dp[N-1] = ans3
	    else:   
	        ans3 = dp[N-1]
	    return 1 + min(ans1,ans2,ans3) 
